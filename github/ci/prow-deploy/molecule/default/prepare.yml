- hosts: instance
  tasks:
    - set_fact:
        deploy_environment: '{{ lookup("env", "DEPLOY_ENVIRONMENT") }}'
    - name: Check DEPLOY_ENVIRONMENT env var
      fail:
        msg: DEPLOY_ENVIRONMENT must be set
      when: deploy_environment is undefined or deploy_environment == ""

    - set_fact:
        local_project_infra_root: '{{ playbook_dir}}/../../../../../'
    - set_fact:
        project_infra_root: /workspace/repos/project-infra-master

    - name: create project-infra dir
      file:
        path: '{{ project_infra_root }}'
        state: directory

    - name: upload project-infra files
      synchronize:
        src: '{{ local_project_infra_root }}'
        dest: '{{ project_infra_root }}'
        rsync_opts:
          - "--exclude=.git"
          - "--exclude=venv"

    - set_fact:
        secrets_dir: '{{ project_infra_root }}/github/ci/prow-deploy/kustom/environments/{{ deploy_environment }}/secrets/'

    - name: Create secrets dir
      file:
        path: '{{ secrets_dir }}'
        state: directory

    - set_fact:
        oauth_secret_dir: '{{ secrets_dir}}/oauth-token'

    - name: Create oauth secret dir
      file:
        path: '{{ oauth_secret_dir }}'
        state: directory

    - set_fact:
        github_token: '{{ lookup("env", "GITHUB_TOKEN") }}'
    - name: Check GITHUB_TOKEN env var
      fail:
        msg: GITHUB_TOKEN must be set
      when: github_token is undefined or github_token == ""

    - name: Create github token secret
      copy:
        content: '{{ lookup("file", github_token) }}'
        dest: '{{ oauth_secret_dir }}/oauth'

    - set_fact:
        gcs_secret_dir: '{{ secrets_dir}}/gcs'

    - name: Create GCS secret dir
      file:
        path: '{{ gcs_secret_dir }}'
        state: directory

    - set_fact:
        gcs_secret: '{{ lookup("env", "GOOGLE_APPLICATION_CREDENTIALS") }}'
    - name: Check GOOGLE_APPLICATION_CREDENTIALS env var
      fail:
        msg: GOOGLE_APPLICATION_CREDENTIALS must be set
      when: gcs_secret is undefined or gcs_secret == ""

    - name: Create GCS secret
      copy:
        content: '{{ lookup("file", gcs_secret) }}'
        dest: '{{ gcs_secret_dir }}/service-account.json'

    - name: Include staging config
      include_vars:
        file: "{{ deploy_environment }}.yaml"

    - name: Launch Docker in Docker
      shell: |
        /usr/local/bin/start_dind.sh
      changed_when: false

    - name: Shallow Clone kubevirtci repo
      git:
        repo: https://github.com/kubevirt/kubevirtci.git
        dest: "{{ kubevirtci_dir }}"
        depth: 1
        refspec: "+refs/heads/master:refs/remotes/origin/master"
      when: "'kubevirtci' in deploy_environment"

    - name: Shallow Clone test-infra repo
      git:
        repo: https://github.com/kubernetes/test-infra.git
        dest: "{{ testinfra_dir }}"
        depth: 1
        refspec: "+refs/heads/master:refs/remotes/origin/master"

    - name: Launch kubevirtci cluster
      command: make cluster-up
      changed_when: false
      args:
        chdir: "{{ kubevirtci_dir }}"
      environment: "{{ shell_environment }}"
      when: "'kubevirtci' in deploy_environment"

    - set_fact:
        kubeconfig_secret_dir: '{{ secrets_dir}}/kubeconfig'

    - name: Create kubeconfig secret dir
      file:
        path: '{{ kubeconfig_secret_dir }}'
        state: directory

    - name: Create kubeconfig secret
      copy:
        src: '{{ kubeconfig_path }}'
        dest: '{{ kubeconfig_secret_dir }}/config'
        remote_src: true
