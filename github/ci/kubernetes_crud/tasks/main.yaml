# Check if there's a handler for every operation
- name: Gather operations
  set_fact:
    operations: "{{ steps | selectattr('op', 'defined') | map(attribute='op') | list | unique }}"
- name: Expand operations list with default operation
  set_fact:
    operations: "{{ operations + [default_crud_operation] }}"
- name: Check existence of operation handlers
  stat:
    path: "{{ role_path }}/tasks/{{ operation }}.yaml"
  loop: "{{ operations }}"
  loop_control:
    loop_var: operation
  register: required_handlers

- name: Fail if any requested handler is not available
  fail:
    msg: Some handler was not found
  when: required_handlers.results | selectattr('stat.exists', 'equalto', False) | list  != []

# Loop over all steps. Ansible first creates a queue of includes
# Then launches the loop
- name: Gathering steps
  vars:
    _kubeconfig_path: "{{ step.kubeconfig|default(default_kubeconfig_path) }}"
    op: "{{ step.op|default(default_crud_operation) }}"
    description: "{{ step.desc|default(op) }}"
    namespace: "{{ step.namespace|default(default_namespace) }}"
    _context: "{{ step.context|default(default_context) }}"
    fatal_validation: "{{ step.fatal_validation|default(default_fatal_validation) }}"
    strict_validation: "{{ step.strict_validation|default(default_strict_validation) }}"
    manifest_inline: "{{ step.manifest_inline|default('') }}"
    manifest_path: "{{ step.manifest|default('') }}"
    manifest_template_path: "{{ step.manifest_template|default('') }}"
    manifest_url: "{{ step.manifest_url|default('') }}"
    name_header: "Step {{ step_num + 1 }}/{{ ansible_loop.length }}: {{ op }} : {{ description }}"
  include_tasks: "{{ op }}.yaml"
  loop: "{{ steps }}"
  loop_control:
    label: "{{ step.desc|default(op) }}"
    index_var: step_num
    loop_var: step
    extended: yes

