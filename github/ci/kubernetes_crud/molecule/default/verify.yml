- hosts: localhost
  vars:
    kubevirtci_dir: /tmp/kubevirtci
    kubevirtci_provider: k8s-1.18
    kubeconfig: '{{ kubevirtci_dir }}/_ci-configs/{{ kubevirtci_provider }}/.kubeconfig'
    kubecontext: kubernetes-admin@kubernetes
  tasks:
    - name: Gather info on created namespace
      k8s_info:
        kubeconfig: "{{ kubeconfig }}"
        context: "{{ kubecontext }}"
        api_version: v1
        kind: Namespace
        name: test-namespace
      register: query

    - name: Verify namespace exists
      assert:
        that: query.resources != []
        success_msg: "Namespace correctly created"
        fail_msg: "Namespace was not created"

    - name: Gather info on created service
      k8s_info:
        kubeconfig: "{{ kubeconfig }}"
        context: "{{ kubecontext }}"
        api_version: v1
        kind: Service
        namespace: test-namespace
        name: test-service
      register: query

    - name: Verify service exists
      assert:
        that: query.resources != []
        success_msg: "Service correctly created"
        fail_msg: "Service was not created"

    - name: Gather info on created service account
      k8s_info:
        kubeconfig: "{{ kubeconfig }}"
        context: "{{ kubecontext }}"
        api_version: v1
        kind: ServiceAccount
        namespace: test-namespace
        name: test-service-account
      register: query

    - name: Verify service exists
      assert:
        that: query.resources != []
        success_msg: "Service Account correctly created"
        fail_msg: "Service Account was not created"

    - name: Gather info on created LimitRange
      k8s_info:
        kubeconfig: "{{ kubeconfig }}"
        context: "{{ kubecontext }}"
        api_version: v1
        kind: LimitRange
        namespace: test-namespace
        name: test-limit-range
      register: query

    - name: Verify LimitRange exists and is correctly rendered
      assert:
        that:
          - query.resources != []
          - query.resources.0.spec.limits.0.default.memory == "512Mi"
        success_msg: "LimitRange correctly created and correctly rendered"
        fail_msg: "LimitRange was not created or correctly rendered"

    - name: Gather info on label
      k8s_info:
        kubeconfig: "{{ kubeconfig }}"
        context: "{{ kubecontext }}"
        api_version: v1
        kind: Node
        name: node01
      register: query

    - name: Verify node label
      assert:
        that: query.resources.0.metadata.labels.test_label_key == "test-label-value"
        success_msg: "Node correctly labelled"
        fail_msg: "Node was not labelled"